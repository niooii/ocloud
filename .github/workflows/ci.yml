name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  SQLX_OFFLINE: true

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    - name: Install sqlx-cli
      run: cargo install sqlx-cli --no-default-features --features native-tls,postgres
    - name: Run migrations
      working-directory: app
      run: |
        sudo apt-get install libpq-dev -y
        PGPASSWORD=password psql -h localhost -U postgres -d postgres -c "CREATE DATABASE ocloud;"
        sqlx migrate run --database-url postgres://postgres:password@localhost/ocloud
    - name: Run tests
      working-directory: app
      run: cargo test

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt
    - name: Enforce formatting
      working-directory: app
      run: cargo fmt --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
    - uses: actions/checkout@v4
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: clippy
    - name: Install sqlx-cli
      run: cargo install sqlx-cli --no-default-features --features native-tls,postgres
    - name: Run migrations
      working-directory: app
      run: |
        sudo apt-get install libpq-dev -y
        PGPASSWORD=password psql -h localhost -U postgres -d postgres -c "CREATE DATABASE ocloud;"
        sqlx migrate run --database-url postgres://postgres:password@localhost/ocloud
    - name: Linting
      working-directory: app
      run: cargo clippy -- -D warnings

  coverage:
    name: Code coverage
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    - name: Install sqlx-cli
      run: cargo install sqlx-cli --no-default-features --features native-tls,postgres
    - name: Run migrations
      working-directory: app
      run: |
        sudo apt-get install libpq-dev -y
        PGPASSWORD=password psql -h localhost -U postgres -d postgres -c "CREATE DATABASE ocloud;"
        sqlx migrate run --database-url postgres://postgres:password@localhost/ocloud
    - name: Generate code coverage
      working-directory: app
      run: |
        cargo install cargo-tarpaulin
        cargo tarpaulin --verbose --workspace